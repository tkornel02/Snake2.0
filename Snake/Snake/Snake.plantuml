@startuml

!theme plain
top to bottom direction
skinparam linetype ortho

class AmmoFruit {
  + AmmoFruit(int, int): 
  + eatenBy(Snake): void
}
class Apple {
  + Apple(int, int): 
  + eatenBy(Snake): void
}
class ColorChanger {
  + ColorChanger(): 
  + actionPerformed(ActionEvent): void
}
class Fruit {
  + Fruit(int, int): 
  + eatenBy(Snake): void
}
class GameIOHandler {
  + GameIOHandler(): 
  - fname: String
  + loadGame(): SnakePanel
  + saveGame(SnakePanel): void
   fname: String
}
class GameIOHandlerTest {
  + GameIOHandlerTest(): 
  + loadGameIOException(): void
  + setUp(): void
  + saveGameIOException(): void
}
class LeaderBoard {
  + LeaderBoard(): 
  - cap: int
  + getScore(int): int
  + addToScores(int): void
   cap: int
}
class LeaderBoardFrame {
  + LeaderBoardFrame(): 
}
class LeaderBoardHandler {
  + LeaderBoardHandler(): 
  + readLeaderBoard(): LeaderBoard
  + saveLeaderBoard(LeaderBoard): void
}
class LeaderBoardTest {
  + LeaderBoardTest(): 
  + InitTest(): void
  + getScore(): void
  + setUp(): void
  + addToScoresTest(): void
}
class MapOptionsFrame {
  ~ MapOptionsFrame(): 
   scH: int
   scW: int
}
class MenuButton {
  ~ MenuButton(String): 
}
class MenuFrame {
  ~ MenuFrame(): 
  - addListeners(): void
  - makeFillPanels(): void
  - setButtons(): void
  - setMenuPanel(): void
}
class PButton {
  ~ PButton(String): 
}
class Projectile {
  + Projectile(int, int, char): 
  + moveProj(int): void
}
class ProjectileTest {
  + ProjectileTest(): 
  + moveProjTest(): void
  + setUp(): void
}
class SidePanel {
  ~ SidePanel(SnakeFrame): 
  - setButtons(): void
}
class Snake {
  + Snake(int): 
  + move(int): void
  + shoot(int, ArrayList<Projectile>): void
}
class SnakeFrame {
  ~ SnakeFrame(int, int): 
  ~ SnakeFrame(SnakePanel): 
  - sp: SnakePanel
  - createFrame(): void
  + saveSp(): void
   sp: SnakePanel
}
class SnakeGame {
  + SnakeGame(): 
  + main(String[]): void
}
class SnakePanel {
  ~ SnakePanel(SnakePanel): 
  ~ SnakePanel(int, int): 
  - createPanel(): void
  + gameOver(): void
  + gameStart(): void
  + startSnake(): void
  + generateZSnake(): void
  + pauseGame(): void
  + generateFruit(): void
  + draw(Graphics): void
  + actionPerformed(ActionEvent): void
  + saveGame(): void
  + paintComponent(Graphics): void
  ~ checkProjectileHit(ZSnake): boolean
  + checkCollision(): void
  + checkSnakeZSnakeCollision(): void
   screenHeight: int
   screenWidth: int
}
class SnakeTest {
  + SnakeTest(): 
  + shootTest(): void
  + setUp(): void
  + ammoFruitEatenTest(): void
  + moveDirectionsTest(): void
  + shootNoAmmoTest(): void
  + appleEatenTest(): void
}
class StatsPanel {
  ~ StatsPanel(SnakePanel): 
   scoreText: String
   ammoText: String
}
class ZSnake {
  + ZSnake(int, int, char): 
  + moveZ(Snake, Random, int): void
  + calcMoveX(Snake): char
  + calcMoveY(Snake): char
}

AmmoFruit           -[#000082,plain]-^  Fruit              
AmmoFruit           -[#595959,dashed]->  Snake              
Apple               -[#000082,plain]-^  Fruit              
Apple               -[#595959,dashed]->  Snake              
ColorChanger        -[#595959,dashed]->  Snake              
Fruit               -[#595959,dashed]->  Snake              
GameIOHandler       -[#595959,dashed]->  SnakePanel         
GameIOHandlerTest  "1" *-[#595959,plain]-> "handler\n1" GameIOHandler      
GameIOHandlerTest   -[#595959,dashed]->  SnakePanel         
LeaderBoardFrame    -[#595959,dashed]->  LeaderBoard        
LeaderBoardFrame    -[#595959,dashed]->  LeaderBoardHandler 
LeaderBoardHandler  -[#595959,dashed]->  LeaderBoard        
LeaderBoardTest    "1" *-[#595959,plain]-> "leaderBoard\n1" LeaderBoard        
MenuFrame           -[#595959,dashed]->  GameIOHandler      
MenuFrame           -[#595959,dashed]->  LeaderBoardFrame   
MenuFrame           -[#595959,dashed]->  MapOptionsFrame    
MenuFrame          "1" *-[#595959,plain]-> "startButton\n1" MenuButton         
MenuFrame           -[#595959,dashed]->  SnakeFrame         
ProjectileTest     "1" *-[#595959,plain]-> "projectile\n1" Projectile         
SidePanel           -[#595959,dashed]->  ColorChanger       
SidePanel          "1" *-[#595959,plain]-> "startButton\n1" PButton            
SidePanel          "1" *-[#595959,plain]-> "sFrame\n1" SnakeFrame         
SidePanel           -[#595959,dashed]->  SnakePanel         
Snake               -[#595959,dashed]->  Projectile         
SnakeFrame          -[#595959,dashed]->  SidePanel          
SnakeFrame         "1" *-[#595959,plain]-> "sp\n1" SnakePanel         
SnakeGame           -[#595959,dashed]->  MenuFrame          
SnakePanel          -[#595959,dashed]->  AmmoFruit          
SnakePanel          -[#595959,dashed]->  Apple              
SnakePanel         "1" *-[#595959,plain]-> "fruit\n1" Fruit              
SnakePanel          -[#595959,dashed]->  GameIOHandler      
SnakePanel         "1" *-[#595959,plain]-> "leaderBoard\n1" LeaderBoard        
SnakePanel          -[#595959,dashed]->  LeaderBoardHandler 
SnakePanel         "1" *-[#595959,plain]-> "projectiles\n*" Projectile         
SnakePanel         "1" *-[#595959,plain]-> "snake\n1" Snake              
SnakePanel         "1" *-[#595959,plain]-> "stp\n1" StatsPanel         
SnakePanel         "1" *-[#595959,plain]-> "zsnakes\n*" ZSnake             
SnakeTest          "1" *-[#595959,plain]-> "ammoFruit\n1" AmmoFruit          
SnakeTest          "1" *-[#595959,plain]-> "apple\n1" Apple              
SnakeTest          "1" *-[#595959,plain]-> "projectiles\n*" Projectile         
SnakeTest          "1" *-[#595959,plain]-> "snake\n1" Snake              
StatsPanel          -[#595959,dashed]->  SnakePanel         
ZSnake              -[#595959,dashed]->  Snake              
@enduml
